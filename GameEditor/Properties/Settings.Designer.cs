//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameEditor.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.14.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MainWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["MainWindowLocation"]));
            }
            set {
                this["MainWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size MainWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["MainWindowSize"]));
            }
            set {
                this["MainWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MainWindowSaved {
            get {
                return ((bool)(this["MainWindowSaved"]));
            }
            set {
                this["MainWindowSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MapEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["MapEditorLocation"]));
            }
            set {
                this["MapEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size MapEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["MapEditorSize"]));
            }
            set {
                this["MapEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MapEditorSaved {
            get {
                return ((bool)(this["MapEditorSaved"]));
            }
            set {
                this["MapEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point TilesetEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["TilesetEditorLocation"]));
            }
            set {
                this["TilesetEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size TilesetEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["TilesetEditorSize"]));
            }
            set {
                this["TilesetEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TilesetEditorSaved {
            get {
                return ((bool)(this["TilesetEditorSaved"]));
            }
            set {
                this["TilesetEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool MainWindowMaximized {
            get {
                return ((bool)(this["MainWindowMaximized"]));
            }
            set {
                this["MainWindowMaximized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point LogWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["LogWindowLocation"]));
            }
            set {
                this["LogWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size LogWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["LogWindowSize"]));
            }
            set {
                this["LogWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool LogWindowSaved {
            get {
                return ((bool)(this["LogWindowSaved"]));
            }
            set {
                this["LogWindowSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point SpriteEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["SpriteEditorLocation"]));
            }
            set {
                this["SpriteEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size SpriteEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["SpriteEditorSize"]));
            }
            set {
                this["SpriteEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SpriteEditorSaved {
            get {
                return ((bool)(this["SpriteEditorSaved"]));
            }
            set {
                this["SpriteEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point SpriteAnimationEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["SpriteAnimationEditorLocation"]));
            }
            set {
                this["SpriteAnimationEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size SpriteAnimationEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["SpriteAnimationEditorSize"]));
            }
            set {
                this["SpriteAnimationEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SpriteAnimationEditorSaved {
            get {
                return ((bool)(this["SpriteAnimationEditorSaved"]));
            }
            set {
                this["SpriteAnimationEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point SfxEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["SfxEditorLocation"]));
            }
            set {
                this["SfxEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size SfxEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["SfxEditorSize"]));
            }
            set {
                this["SfxEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SfxEditorSaved {
            get {
                return ((bool)(this["SfxEditorSaved"]));
            }
            set {
                this["SfxEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point ModEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["ModEditorLocation"]));
            }
            set {
                this["ModEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size ModEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["ModEditorSize"]));
            }
            set {
                this["ModEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ModEditorSaved {
            get {
                return ((bool)(this["ModEditorSaved"]));
            }
            set {
                this["ModEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public uint LogTargets {
            get {
                return ((uint)(this["LogTargets"]));
            }
            set {
                this["LogTargets"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool LogTargetsSaved {
            get {
                return ((bool)(this["LogTargetsSaved"]));
            }
            set {
                this["LogTargetsSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point FontEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["FontEditorLocation"]));
            }
            set {
                this["FontEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size FontEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["FontEditorSize"]));
            }
            set {
                this["FontEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FontEditorSaved {
            get {
                return ((bool)(this["FontEditorSaved"]));
            }
            set {
                this["FontEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color MapEditorGridColor {
            get {
                return ((global::System.Drawing.Color)(this["MapEditorGridColor"]));
            }
            set {
                this["MapEditorGridColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Blue")]
        public global::System.Drawing.Color TilePickerLeftColor {
            get {
                return ((global::System.Drawing.Color)(this["TilePickerLeftColor"]));
            }
            set {
                this["TilePickerLeftColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color TilePickerRightColor {
            get {
                return ((global::System.Drawing.Color)(this["TilePickerRightColor"]));
            }
            set {
                this["TilePickerRightColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color SpriteEditorGridColor {
            get {
                return ((global::System.Drawing.Color)(this["SpriteEditorGridColor"]));
            }
            set {
                this["SpriteEditorGridColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color TileEditorGridColor {
            get {
                return ((global::System.Drawing.Color)(this["TileEditorGridColor"]));
            }
            set {
                this["TileEditorGridColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point ValidatorWindowLocation {
            get {
                return ((global::System.Drawing.Point)(this["ValidatorWindowLocation"]));
            }
            set {
                this["ValidatorWindowLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size ValidatorWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["ValidatorWindowSize"]));
            }
            set {
                this["ValidatorWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ValidatorWindowSaved {
            get {
                return ((bool)(this["ValidatorWindowSaved"]));
            }
            set {
                this["ValidatorWindowSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point PropFontEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["PropFontEditorLocation"]));
            }
            set {
                this["PropFontEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size PropFontEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["PropFontEditorSize"]));
            }
            set {
                this["PropFontEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PropFontEditorSaved {
            get {
                return ((bool)(this["PropFontEditorSaved"]));
            }
            set {
                this["PropFontEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point RoomEditorLocation {
            get {
                return ((global::System.Drawing.Point)(this["RoomEditorLocation"]));
            }
            set {
                this["RoomEditorLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size RoomEditorSize {
            get {
                return ((global::System.Drawing.Size)(this["RoomEditorSize"]));
            }
            set {
                this["RoomEditorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RoomEditorSaved {
            get {
                return ((bool)(this["RoomEditorSaved"]));
            }
            set {
                this["RoomEditorSaved"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Red")]
        public global::System.Drawing.Color SpriteEditorCollisionColor {
            get {
                return ((global::System.Drawing.Color)(this["SpriteEditorCollisionColor"]));
            }
            set {
                this["SpriteEditorCollisionColor"] = value;
            }
        }
    }
}
